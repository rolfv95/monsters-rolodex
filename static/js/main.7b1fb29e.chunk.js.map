{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","onChange","App","e","setState","searchField","target","value","state","filteredMonsters","fetch","then","response","json","users","this","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GACpB,OACC,sBAAKC,UAAU,iBAAf,UACC,qBACCC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEJ,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCNRC,EAAW,SAACR,GACxB,OACC,mCACC,qBAAKC,UAAU,YAAf,SACED,EAAMS,SAASC,KAAI,SAACN,GAAD,OACnB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,YCPXM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACxC,OACC,uBACCZ,UAAU,SACVW,YAAaA,EACbE,SAAUD,MCqCEE,E,kDAtCd,aAAe,IAAD,8BACb,gBAcDF,aAAe,SAACG,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAdtC,EAAKC,MAAQ,CACZZ,SAAU,GACVS,YAAa,GACbI,iBAAkB,IALN,E,qDASd,WAAqB,IAAD,OACnBC,MAAM,8CACJC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKV,SAAS,CAAER,SAAUkB,S,oBAM7C,WAAU,IAAD,OACR,EAAkCC,KAAKP,MAA/BZ,EAAR,EAAQA,SAAUS,EAAlB,EAAkBA,YACZI,EAAmBb,EAASoB,QAAO,SAACzB,GAAD,OACxCA,EAAQE,KAAKwB,cAAcC,SAASb,EAAYY,kBAEjD,OACC,sBAAK7B,UAAU,MAAf,UACC,kDACA,cAAC,EAAD,CACCW,YAAY,iBACZC,aAAc,SAACG,GAAD,OACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,WAGxC,cAAC,EAAD,CAAUX,SAAUa,W,GAjCNU,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBZ,M","file":"static/js/main.7b1fb29e.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = (props) => {\n\treturn (\n\t\t<div className='card-container'>\n\t\t\t<img\n\t\t\t\talt='monster'\n\t\t\t\tsrc={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n\t\t\t/>\n\t\t\t<h2>{props.monster.name}</h2>\n\t\t\t<p>{props.monster.email}</p>\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport './card-list.styles.css';\n\nimport { Card } from '../card/card.component';\n\nexport const CardList = (props) => {\n\treturn (\n\t\t<>\n\t\t\t<div className='card-list'>\n\t\t\t\t{props.monsters.map((monster) => (\n\t\t\t\t\t<Card key={monster.id} monster={monster}></Card>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n\treturn (\n\t\t<input\n\t\t\tclassName='search'\n\t\t\tplaceholder={placeholder}\n\t\t\tonChange={handleChange}\n\t\t/>\n\t);\n};\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: '',\n\t\t\tfilteredMonsters: [],\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then((response) => response.json())\n\t\t\t.then((users) => this.setState({ monsters: users }));\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({ searchField: e.target.value });\n\t};\n\trender() {\n\t\tconst { monsters, searchField } = this.state;\n\t\tconst filteredMonsters = monsters.filter((monster) =>\n\t\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t);\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<h1>Monsters Rolodex</h1>\n\t\t\t\t<SearchBox\n\t\t\t\t\tplaceholder='Search monster'\n\t\t\t\t\thandleChange={(e) =>\n\t\t\t\t\t\tthis.setState({ searchField: e.target.value })\n\t\t\t\t\t}\n\t\t\t\t></SearchBox>\n\t\t\t\t<CardList monsters={filteredMonsters}></CardList>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}